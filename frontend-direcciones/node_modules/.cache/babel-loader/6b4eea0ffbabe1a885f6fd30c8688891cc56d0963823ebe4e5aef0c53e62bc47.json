{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Control_Proyect\\\\frontend-direcciones\\\\src\\\\components\\\\ClienteForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClienteForm = ({\n  modo,\n  idCliente\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [cliente, setCliente] = useState({\n    nombre: '',\n    apellido: '',\n    correo: '',\n    direcciones: [{\n      nombreEtiqueta: '',\n      provincia: '',\n      canton: '',\n      parroquia: '',\n      callePrincipal: '',\n      calleSecundaria: '',\n      numeroCasa: '',\n      referencia: '',\n      telefono: '',\n      email: '',\n      esPrincipal: false\n    }]\n  });\n  const soloLetras = valor => /^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]*$/.test(valor);\n  const soloNumeros = valor => /^[0-9]*$/.test(valor);\n  const eliminarDireccion = index => {\n    if (cliente.direcciones.length === 1) {\n      alert('Debe haber al menos una dirección.');\n      return;\n    }\n    const nuevasDirecciones = cliente.direcciones.filter((_, i) => i !== index);\n    setCliente({\n      ...cliente,\n      direcciones: nuevasDirecciones\n    });\n  };\n  useEffect(() => {\n    const cargarCliente = async () => {\n      if (modo === 'editar' && idCliente) {\n        try {\n          const res = await axios.get(`http://localhost:3001/api/clientes/${idCliente}`);\n          const cli = res.data;\n          setCliente({\n            nombre: cli.Nombre || '',\n            apellido: cli.Apellido || '',\n            correo: cli.CorreoElectronico || '',\n            direcciones: (cli.Direcciones || []).map(dir => ({\n              nombreEtiqueta: dir.NombreEtiqueta || '',\n              provincia: dir.Provincia || '',\n              canton: dir.Canton || '',\n              parroquia: dir.Parroquia || '',\n              callePrincipal: dir.CallePrincipal || '',\n              calleSecundaria: dir.CalleSecundaria || '',\n              numeroCasa: dir.NumeroCasa || '',\n              referencia: dir.Referencia || '',\n              telefono: dir.Telefono || '',\n              email: dir.Email || '',\n              esPrincipal: !!dir.EsPrincipal\n            }))\n          });\n        } catch (error) {\n          console.error('Error al cargar cliente:', error);\n          alert('Error al obtener datos del cliente.');\n        }\n      }\n    };\n    cargarCliente();\n  }, [modo, idCliente]);\n  const handleClienteChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (['nombre', 'apellido'].includes(name) && !soloLetras(value)) return;\n    setCliente({\n      ...cliente,\n      [name]: value\n    });\n  };\n  const handleDireccionChange = (index, e) => {\n    const nuevas = [...cliente.direcciones];\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n\n    // Validaciones específicas por campo\n    if (['provincia', 'canton', 'parroquia', 'nombreEtiqueta'].includes(name) && !soloLetras(value)) return;\n    if (name === 'telefono') {\n      if (!soloNumeros(value) || value.length > 10) return;\n    }\n\n    // if (name === 'numeroCasa') {\n    //   if (!soloNumeros(value)) return;\n    // }\n\n    if (name === 'esPrincipal' && checked) {\n      nuevas.forEach((dir, i) => {\n        dir.esPrincipal = i === index;\n      });\n    } else {\n      nuevas[index][name] = type === 'checkbox' ? checked : value;\n    }\n    setCliente({\n      ...cliente,\n      direcciones: nuevas\n    });\n  };\n  const addDireccion = () => {\n    setCliente({\n      ...cliente,\n      direcciones: [...cliente.direcciones, {\n        nombreEtiqueta: '',\n        provincia: '',\n        canton: '',\n        parroquia: '',\n        callePrincipal: '',\n        calleSecundaria: '',\n        numeroCasa: '',\n        referencia: '',\n        telefono: '',\n        email: '',\n        esPrincipal: false\n      }]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const camposObligatorios = ['nombreEtiqueta', 'provincia', 'canton', 'callePrincipal', 'calleSecundaria', 'numeroCasa', 'telefono'];\n    const direccionValida = cliente.direcciones.every((dir, i) => {\n      return camposObligatorios.every(campo => {\n        const valor = dir[campo];\n        if (!valor || valor.trim() === '') {\n          alert(`Falta completar el campo obligatorio \"${campo}\" en la dirección #${i + 1}`);\n          return false;\n        }\n        return true;\n      });\n    });\n    if (!direccionValida) return;\n    const principales = cliente.direcciones.filter(d => d.esPrincipal);\n    if (principales.length !== 1) {\n      alert('Debe haber exactamente una dirección principal.');\n      return;\n    }\n    try {\n      if (modo === 'crear') {\n        await axios.post('http://localhost:3001/api/clientes', cliente);\n        alert('Cliente creado correctamente.');\n      } else {\n        await axios.put(`http://localhost:3001/api/clientes/${idCliente}`, cliente);\n        alert('Cliente actualizado correctamente.');\n      }\n      navigate('/');\n    } catch (error) {\n      console.error('Error al guardar cliente:', error);\n      alert('Ocurrió un error al guardar el cliente.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: modo === 'crear' ? 'Crear Cliente' : 'Editar Cliente'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"nombre\",\n      placeholder: \"Nombre\",\n      value: cliente.nombre,\n      onChange: handleClienteChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"apellido\",\n      placeholder: \"Apellido\",\n      value: cliente.apellido,\n      onChange: handleClienteChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"correo\",\n      placeholder: \"Correo electr\\xF3nico\",\n      value: cliente.correo,\n      onChange: handleClienteChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Direcciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), cliente.direcciones.map((dir, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: 10,\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"nombreEtiqueta\",\n        placeholder: \"Etiqueta\",\n        value: dir.nombreEtiqueta,\n        onChange: e => handleDireccionChange(i, e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"provincia\",\n        placeholder: \"Provincia\",\n        value: dir.provincia,\n        onChange: e => handleDireccionChange(i, e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"canton\",\n        placeholder: \"Cant\\xF3n\",\n        value: dir.canton,\n        onChange: e => handleDireccionChange(i, e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"parroquia\",\n        placeholder: \"Parroquia\",\n        value: dir.parroquia,\n        onChange: e => handleDireccionChange(i, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"callePrincipal\",\n        placeholder: \"Calle Principal\",\n        value: dir.callePrincipal,\n        onChange: e => handleDireccionChange(i, e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"calleSecundaria\",\n        placeholder: \"Calle Secundaria\",\n        value: dir.calleSecundaria,\n        onChange: e => handleDireccionChange(i, e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"numeroCasa\",\n        placeholder: \"N\\xFAmero de Casa\",\n        value: dir.numeroCasa,\n        onChange: e => handleDireccionChange(i, e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"referencia\",\n        placeholder: \"Referencia\",\n        value: dir.referencia,\n        onChange: e => handleDireccionChange(i, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"telefono\",\n        placeholder: \"Tel\\xE9fono\",\n        value: dir.telefono,\n        onChange: e => handleDireccionChange(i, e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        placeholder: \"Correo\",\n        value: dir.email,\n        onChange: e => handleDireccionChange(i, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\xBFPrincipal?\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"esPrincipal\",\n          checked: dir.esPrincipal,\n          onChange: e => handleDireccionChange(i, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => eliminarDireccion(i),\n          style: {\n            color: 'red'\n          },\n          children: \"\\u274C Eliminar Direcci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 5\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 3\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addDireccion,\n      children: \"+ Agregar Direcci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: modo === 'crear' ? 'Guardar Cliente' : 'Actualizar Cliente'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(ClienteForm, \"WZBAid9lzHOVLubQbmNbXwGmyj8=\", false, function () {\n  return [useNavigate];\n});\n_c = ClienteForm;\nexport default ClienteForm;\nvar _c;\n$RefreshReg$(_c, \"ClienteForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","ClienteForm","modo","idCliente","_s","navigate","cliente","setCliente","nombre","apellido","correo","direcciones","nombreEtiqueta","provincia","canton","parroquia","callePrincipal","calleSecundaria","numeroCasa","referencia","telefono","email","esPrincipal","soloLetras","valor","test","soloNumeros","eliminarDireccion","index","length","alert","nuevasDirecciones","filter","_","i","cargarCliente","res","get","cli","data","Nombre","Apellido","CorreoElectronico","Direcciones","map","dir","NombreEtiqueta","Provincia","Canton","Parroquia","CallePrincipal","CalleSecundaria","NumeroCasa","Referencia","Telefono","Email","EsPrincipal","error","console","handleClienteChange","e","name","value","target","includes","handleDireccionChange","nuevas","type","checked","forEach","addDireccion","handleSubmit","preventDefault","camposObligatorios","direccionValida","every","campo","trim","principales","d","post","put","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","required","style","border","padding","marginBottom","textAlign","onClick","color","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Control_Proyect/frontend-direcciones/src/components/ClienteForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ClienteForm = ({ modo, idCliente }) => {\r\n  const navigate = useNavigate();\r\n  const [cliente, setCliente] = useState({\r\n    nombre: '',\r\n    apellido: '',\r\n    correo: '',\r\n    direcciones: [\r\n      {\r\n        nombreEtiqueta: '',\r\n        provincia: '',\r\n        canton: '',\r\n        parroquia: '',\r\n        callePrincipal: '',\r\n        calleSecundaria: '',\r\n        numeroCasa: '',\r\n        referencia: '',\r\n        telefono: '',\r\n        email: '',\r\n        esPrincipal: false,\r\n      },\r\n    ],\r\n  });\r\n\r\nconst soloLetras = (valor) => /^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]*$/.test(valor);\r\nconst soloNumeros = (valor) => /^[0-9]*$/.test(valor);\r\n\r\nconst eliminarDireccion = (index) => {\r\n  if (cliente.direcciones.length === 1) {\r\n    alert('Debe haber al menos una dirección.');\r\n    return;\r\n  }\r\n\r\n  const nuevasDirecciones = cliente.direcciones.filter((_, i) => i !== index);\r\n  setCliente({ ...cliente, direcciones: nuevasDirecciones });\r\n};\r\n\r\nuseEffect(() => {\r\n  const cargarCliente = async () => {\r\n    if (modo === 'editar' && idCliente) {\r\n      try {\r\n        const res = await axios.get(`http://localhost:3001/api/clientes/${idCliente}`);\r\n        const cli = res.data;\r\n        setCliente({\r\n          nombre: cli.Nombre || '',\r\n          apellido: cli.Apellido || '',\r\n          correo: cli.CorreoElectronico || '',\r\n          direcciones: (cli.Direcciones || []).map(dir => ({\r\n            nombreEtiqueta: dir.NombreEtiqueta || '',\r\n            provincia: dir.Provincia || '',\r\n            canton: dir.Canton || '',\r\n            parroquia: dir.Parroquia || '',\r\n            callePrincipal: dir.CallePrincipal || '',\r\n            calleSecundaria: dir.CalleSecundaria || '',\r\n            numeroCasa: dir.NumeroCasa || '',\r\n            referencia: dir.Referencia || '',\r\n            telefono: dir.Telefono || '',\r\n            email: dir.Email || '',\r\n            esPrincipal: !!dir.EsPrincipal\r\n          }))\r\n        });\r\n      } catch (error) {\r\n        console.error('Error al cargar cliente:', error);\r\n        alert('Error al obtener datos del cliente.');\r\n      }\r\n    }\r\n  };\r\n\r\n  cargarCliente();\r\n}, [modo, idCliente]);\r\n\r\n\r\n\r\n  const handleClienteChange = (e) => {\r\n  const { name, value } = e.target;\r\n\r\n  if (['nombre', 'apellido'].includes(name) && !soloLetras(value)) return;\r\n\r\n  setCliente({ ...cliente, [name]: value });\r\n};\r\n\r\n  const handleDireccionChange = (index, e) => {\r\n  const nuevas = [...cliente.direcciones];\r\n  const { name, value, type, checked } = e.target;\r\n\r\n  // Validaciones específicas por campo\r\n  if (['provincia', 'canton', 'parroquia', 'nombreEtiqueta'].includes(name) && !soloLetras(value)) return;\r\n  if (name === 'telefono') {\r\n  if (!soloNumeros(value) || value.length > 10) return;\r\n}\r\n\r\n// if (name === 'numeroCasa') {\r\n//   if (!soloNumeros(value)) return;\r\n// }\r\n\r\n  if (name === 'esPrincipal' && checked) {\r\n    nuevas.forEach((dir, i) => {\r\n      dir.esPrincipal = i === index;\r\n    });\r\n  } else {\r\n    nuevas[index][name] = type === 'checkbox' ? checked : value;\r\n  }\r\n\r\n  setCliente({ ...cliente, direcciones: nuevas });\r\n};\r\n\r\n  const addDireccion = () => {\r\n    setCliente({\r\n      ...cliente,\r\n      direcciones: [\r\n        ...cliente.direcciones,\r\n        {\r\n          nombreEtiqueta: '',\r\n          provincia: '',\r\n          canton: '',\r\n          parroquia: '',\r\n          callePrincipal: '',\r\n          calleSecundaria: '',\r\n          numeroCasa: '',\r\n          referencia: '',\r\n          telefono: '',\r\n          email: '',\r\n          esPrincipal: false,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const camposObligatorios = [\r\n      'nombreEtiqueta', 'provincia', 'canton',\r\n      'callePrincipal', 'calleSecundaria', 'numeroCasa', 'telefono'\r\n    ];\r\n\r\n    const direccionValida = cliente.direcciones.every((dir, i) => {\r\n      return camposObligatorios.every(campo => {\r\n        const valor = dir[campo];\r\n        if (!valor || valor.trim() === '') {\r\n          alert(`Falta completar el campo obligatorio \"${campo}\" en la dirección #${i + 1}`);\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n    });\r\n\r\n    if (!direccionValida) return;\r\n\r\n    const principales = cliente.direcciones.filter(d => d.esPrincipal);\r\n    if (principales.length !== 1) {\r\n      alert('Debe haber exactamente una dirección principal.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (modo === 'crear') {\r\n        await axios.post('http://localhost:3001/api/clientes', cliente);\r\n        alert('Cliente creado correctamente.');\r\n      } else {\r\n        await axios.put(`http://localhost:3001/api/clientes/${idCliente}`, cliente);\r\n        alert('Cliente actualizado correctamente.');\r\n      }\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Error al guardar cliente:', error);\r\n      alert('Ocurrió un error al guardar el cliente.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>{modo === 'crear' ? 'Crear Cliente' : 'Editar Cliente'}</h2>\r\n\r\n      <input\r\n        name=\"nombre\"\r\n        placeholder=\"Nombre\"\r\n        value={cliente.nombre}\r\n        onChange={handleClienteChange}\r\n        required\r\n      />\r\n      <input\r\n        name=\"apellido\"\r\n        placeholder=\"Apellido\"\r\n        value={cliente.apellido}\r\n        onChange={handleClienteChange}\r\n        required\r\n      />\r\n      <input\r\n        name=\"correo\"\r\n        placeholder=\"Correo electrónico\"\r\n        value={cliente.correo}\r\n        onChange={handleClienteChange}\r\n        required\r\n      />\r\n\r\n      <h3>Direcciones</h3>\r\n      {cliente.direcciones.map((dir, i) => (\r\n  <div key={i} style={{ border: '1px solid #ccc', padding: 10, marginBottom: 10 }}>\r\n    <input name=\"nombreEtiqueta\" placeholder=\"Etiqueta\" value={dir.nombreEtiqueta} onChange={(e) => handleDireccionChange(i, e)} required />\r\n    <input name=\"provincia\" placeholder=\"Provincia\" value={dir.provincia} onChange={(e) => handleDireccionChange(i, e)} required />\r\n    <input name=\"canton\" placeholder=\"Cantón\" value={dir.canton} onChange={(e) => handleDireccionChange(i, e)} required />\r\n    <input name=\"parroquia\" placeholder=\"Parroquia\" value={dir.parroquia} onChange={(e) => handleDireccionChange(i, e)} />\r\n    <input name=\"callePrincipal\" placeholder=\"Calle Principal\" value={dir.callePrincipal} onChange={(e) => handleDireccionChange(i, e)} required />\r\n    <input name=\"calleSecundaria\" placeholder=\"Calle Secundaria\" value={dir.calleSecundaria} onChange={(e) => handleDireccionChange(i, e)} required />\r\n    <input name=\"numeroCasa\" placeholder=\"Número de Casa\" value={dir.numeroCasa} onChange={(e) => handleDireccionChange(i, e)} required />\r\n    <input name=\"referencia\" placeholder=\"Referencia\" value={dir.referencia} onChange={(e) => handleDireccionChange(i, e)} />\r\n    <input name=\"telefono\" placeholder=\"Teléfono\" value={dir.telefono} onChange={(e) => handleDireccionChange(i, e)} required />\r\n    <input name=\"email\" placeholder=\"Correo\" value={dir.email} onChange={(e) => handleDireccionChange(i, e)} />\r\n    <label>\r\n      ¿Principal?\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"esPrincipal\"\r\n        checked={dir.esPrincipal}\r\n        onChange={(e) => handleDireccionChange(i, e)}\r\n      />\r\n    </label>\r\n    <div style={{ textAlign: 'right' }}>\r\n      <button type=\"button\" onClick={() => eliminarDireccion(i)} style={{ color: 'red' }}>\r\n        ❌ Eliminar Dirección\r\n      </button>\r\n    </div>\r\n  </div>\r\n))}\r\n\r\n      <button type=\"button\" onClick={addDireccion}>+ Agregar Dirección</button>\r\n      <br />\r\n      <button type=\"submit\">{modo === 'crear' ? 'Guardar Cliente' : 'Actualizar Cliente'}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ClienteForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}